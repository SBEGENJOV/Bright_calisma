// <auto-generated />
using System;
using CoreDataLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreDataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreModelLayer.Model.Birimler", b =>
                {
                    b.Property<int>("BirimNO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirimAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BirimCalisanSayisi")
                        .HasColumnType("int");

                    b.Property<int>("GorevNO")
                        .HasColumnType("int");

                    b.HasKey("BirimNO");

                    b.HasIndex("GorevNO");

                    b.ToTable("Birimlers");
                });

            modelBuilder.Entity("CoreModelLayer.Model.Cocuk", b =>
                {
                    b.Property<int>("CocukNO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CocukAdSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CocukCinsiyet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CocukDogumTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonelNO")
                        .HasColumnType("int");

                    b.HasKey("CocukNO");

                    b.HasIndex("PersonelNO");

                    b.ToTable("Cocuks");
                });

            modelBuilder.Entity("CoreModelLayer.Model.Gorev", b =>
                {
                    b.Property<int>("GorevNO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GorevAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GorevPuan")
                        .HasColumnType("int");

                    b.Property<string>("GorevTanimi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GorevNO");

                    b.ToTable("Gorevs");
                });

            modelBuilder.Entity("CoreModelLayer.Model.Personel", b =>
                {
                    b.Property<int>("PersonelNO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GorevNO")
                        .HasColumnType("int");

                    b.Property<string>("PersonelAdSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PersonelBTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonelCinsiyet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelMaas")
                        .HasColumnType("int");

                    b.Property<int>("PersonelPrim")
                        .HasColumnType("int");

                    b.Property<string>("PersonelVardiyeDurum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnvanNO")
                        .HasColumnType("int");

                    b.HasKey("PersonelNO");

                    b.HasIndex("GorevNO");

                    b.HasIndex("UnvanNO");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("CoreModelLayer.Model.Proje", b =>
                {
                    b.Property<int>("ProjeNO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BaslamaTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjeAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjeNO");

                    b.ToTable("Projes");
                });

            modelBuilder.Entity("CoreModelLayer.Model.Unvan", b =>
                {
                    b.Property<int>("UnvanNO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UnvanAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnvanNO");

                    b.ToTable("Unvans");
                });

            modelBuilder.Entity("GorevProje", b =>
                {
                    b.Property<int>("GorevsGorevNO")
                        .HasColumnType("int");

                    b.Property<int>("ProjesProjeNO")
                        .HasColumnType("int");

                    b.HasKey("GorevsGorevNO", "ProjesProjeNO");

                    b.HasIndex("ProjesProjeNO");

                    b.ToTable("GorevProje");
                });

            modelBuilder.Entity("CoreModelLayer.Model.Birimler", b =>
                {
                    b.HasOne("CoreModelLayer.Model.Gorev", "Gorev")
                        .WithMany()
                        .HasForeignKey("GorevNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorev");
                });

            modelBuilder.Entity("CoreModelLayer.Model.Cocuk", b =>
                {
                    b.HasOne("CoreModelLayer.Model.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("CoreModelLayer.Model.Personel", b =>
                {
                    b.HasOne("CoreModelLayer.Model.Gorev", "Gorevs")
                        .WithMany()
                        .HasForeignKey("GorevNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreModelLayer.Model.Unvan", "Unvans")
                        .WithMany()
                        .HasForeignKey("UnvanNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorevs");

                    b.Navigation("Unvans");
                });

            modelBuilder.Entity("GorevProje", b =>
                {
                    b.HasOne("CoreModelLayer.Model.Gorev", null)
                        .WithMany()
                        .HasForeignKey("GorevsGorevNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreModelLayer.Model.Proje", null)
                        .WithMany()
                        .HasForeignKey("ProjesProjeNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
