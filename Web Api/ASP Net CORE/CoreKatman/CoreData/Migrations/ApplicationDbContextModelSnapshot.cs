// <auto-generated />
using System;
using CoreData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreModel.Model.Dersler", b =>
                {
                    b.Property<int>("DersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DersAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DersID");

                    b.ToTable("Derslers");
                });

            modelBuilder.Entity("CoreModel.Model.Ogrenciler", b =>
                {
                    b.Property<int>("OgrenciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Giris")
                        .HasColumnType("datetime2");

                    b.Property<string>("KayitTarihi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sinif")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OgrenciID");

                    b.ToTable("Ogrencilers");
                });

            modelBuilder.Entity("CoreModel.Model.Ogretmenler", b =>
                {
                    b.Property<int>("OgretmenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DersID")
                        .HasColumnType("int");

                    b.Property<int?>("DerslerDersID")
                        .HasColumnType("int");

                    b.Property<decimal>("Maas")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OgretmenID");

                    b.HasIndex("DerslerDersID");

                    b.ToTable("Ogretmenlers");
                });

            modelBuilder.Entity("DerslerOgrenciler", b =>
                {
                    b.Property<int>("DerslersDersID")
                        .HasColumnType("int");

                    b.Property<int>("OgrencilersOgrenciID")
                        .HasColumnType("int");

                    b.HasKey("DerslersDersID", "OgrencilersOgrenciID");

                    b.HasIndex("OgrencilersOgrenciID");

                    b.ToTable("DerslerOgrenciler");
                });

            modelBuilder.Entity("CoreModel.Model.Ogretmenler", b =>
                {
                    b.HasOne("CoreModel.Model.Dersler", "Dersler")
                        .WithMany()
                        .HasForeignKey("DerslerDersID");

                    b.Navigation("Dersler");
                });

            modelBuilder.Entity("DerslerOgrenciler", b =>
                {
                    b.HasOne("CoreModel.Model.Dersler", null)
                        .WithMany()
                        .HasForeignKey("DerslersDersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreModel.Model.Ogrenciler", null)
                        .WithMany()
                        .HasForeignKey("OgrencilersOgrenciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
