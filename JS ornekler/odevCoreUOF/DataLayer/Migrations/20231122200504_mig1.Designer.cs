// <auto-generated />
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231122200504_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ModelLayer.Adresler", b =>
                {
                    b.Property<int>("adresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("adresID"), 1L, 1);

                    b.Property<string>("bina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("musteriID")
                        .HasColumnType("int");

                    b.Property<string>("sehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sokak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ulke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("adresID");

                    b.HasIndex("musteriID");

                    b.ToTable("Adreslers");
                });

            modelBuilder.Entity("ModelLayer.KargoSirketleri", b =>
                {
                    b.Property<int>("kargoSirketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("kargoSirketID"), 1L, 1);

                    b.Property<string>("aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kargoSirketID");

                    b.ToTable("KargoSirketleris");
                });

            modelBuilder.Entity("ModelLayer.Kategori", b =>
                {
                    b.Property<int>("kategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("kategoriID"), 1L, 1);

                    b.Property<string>("aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kategoriID");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("ModelLayer.Musteri", b =>
                {
                    b.Property<int>("musteriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("musteriID"), 1L, 1);

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ePosta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("musteriID");

                    b.ToTable("Musteris");
                });

            modelBuilder.Entity("ModelLayer.OdemeYontem", b =>
                {
                    b.Property<int>("odemeYontemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("odemeYontemID"), 1L, 1);

                    b.Property<string>("aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("odemeYontemID");

                    b.ToTable("OdemeYontems");
                });

            modelBuilder.Entity("ModelLayer.Siparis", b =>
                {
                    b.Property<int>("siparisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("siparisID"), 1L, 1);

                    b.Property<double>("fiyat")
                        .HasColumnType("float");

                    b.Property<int>("kargoSirketID")
                        .HasColumnType("int");

                    b.Property<int>("miktar")
                        .HasColumnType("int");

                    b.Property<int>("musteriID")
                        .HasColumnType("int");

                    b.Property<int>("odemeYontemID")
                        .HasColumnType("int");

                    b.Property<int>("siparisDurumID")
                        .HasColumnType("int");

                    b.Property<int>("urunID")
                        .HasColumnType("int");

                    b.HasKey("siparisID");

                    b.HasIndex("kargoSirketID");

                    b.HasIndex("musteriID");

                    b.HasIndex("odemeYontemID");

                    b.HasIndex("siparisDurumID");

                    b.HasIndex("urunID");

                    b.ToTable("Siparis");
                });

            modelBuilder.Entity("ModelLayer.siparisDurum", b =>
                {
                    b.Property<int>("siparisDurumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("siparisDurumID"), 1L, 1);

                    b.Property<string>("aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("siparisDurumID");

                    b.ToTable("SiparisDurums");
                });

            modelBuilder.Entity("ModelLayer.Urun", b =>
                {
                    b.Property<int>("urunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("urunID"), 1L, 1);

                    b.Property<string>("aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("fiyat")
                        .HasColumnType("float");

                    b.Property<int>("kategoriID")
                        .HasColumnType("int");

                    b.HasKey("urunID");

                    b.HasIndex("kategoriID");

                    b.ToTable("Uruns");
                });

            modelBuilder.Entity("ModelLayer.Adresler", b =>
                {
                    b.HasOne("ModelLayer.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("musteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("ModelLayer.Siparis", b =>
                {
                    b.HasOne("ModelLayer.KargoSirketleri", "KargoSirketleri")
                        .WithMany()
                        .HasForeignKey("kargoSirketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("musteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.OdemeYontem", "OdemeYontem")
                        .WithMany()
                        .HasForeignKey("odemeYontemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.siparisDurum", "SiparisDurum")
                        .WithMany()
                        .HasForeignKey("siparisDurumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("urunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KargoSirketleri");

                    b.Navigation("Musteri");

                    b.Navigation("OdemeYontem");

                    b.Navigation("SiparisDurum");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("ModelLayer.Urun", b =>
                {
                    b.HasOne("ModelLayer.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("kategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });
#pragma warning restore 612, 618
        }
    }
}
